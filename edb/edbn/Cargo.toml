[package]
name = "edb"
version = "1.0.0"
authors = ["WHTCORPS INC"]
description = "MemCAM inspired Distributed Relativistic Semi-Relational Allegro SQL"
license = "Apache-2.0"
keywords = ["edb", "distributed-systems", "violetabft"]
homepage = "https://edb.com"
repository = "https://github.com/whtcorpsinc/edb-prod/"
readme = "README.md"
edition = "2018"
publish = false

[features]
bundled_sqlite3 = ["rusqlite/bundled"]
sqlcipher = ["rusqlite/sqlcipher", "edb_edb/sqlcipher"]
syncable = ["edb_lenin", "lenin_promises", "edb_edb/syncable"]
default = ["protobuf-codec", "bundled_sqlite3", "syncable"]
tcmalloc = ["edb_alloc/tcmalloc"]
jemalloc = ["edb_alloc/jemalloc", "engine_lmdb/jemalloc"]
mimalloc = ["edb_alloc/mimalloc"]
porBlock = ["engine_lmdb/porBlock"]
sse = ["engine_lmdb/sse"]
mem-profiling = ["edb_alloc/mem-profiling"]
failpoints = ["fail/failpoints", "violetabftstore/failpoints"]
prost-codec = [
    "engine_lmdb/prost-codec",
    "grpcio/prost-codec",
    "tuplespaceInstanton/prost-codec",
    "ekvproto/prost-codec",
    "fidel_client/prost-codec",
    "violetabft/prost-codec",
    "violetabftstore/prost-codec",
    "sst_importer/prost-codec",
    "milevadb_query_datatype/prost-codec",
    "fidel_timeshare/prost-codec",
    "txn_types/prost-codec",
    "encryption/prost-codec",
    "violetabftstore::interlock::/prost-codec",
]
protobuf-codec = [
    "engine_lmdb/protobuf-codec",
    "grpcio/protobuf-codec",
    "tuplespaceInstanton/protobuf-codec",
    "ekvproto/protobuf-codec",
    "fidel_client/protobuf-codec",
    "violetabft/protobuf-codec",
    "violetabftstore/protobuf-codec",
    "sst_importer/protobuf-codec",
    "milevadb_query_datatype/protobuf-codec",
    "fidel_timeshare/protobuf-codec",
    "txn_types/protobuf-codec",
    "encryption/protobuf-codec",
    "violetabftstore::interlock::/protobuf-codec",
]
testexport = ["violetabftstore/testexport"]


testing = []

[lib]
name = "edb-prod"

[dependencies]
panic_hook = { path = "components/panic_hook" }
test_sst_importer = { path = "components/test_sst_importer" }
test_util = { path = "components/test_util" }
tokio = { version = "1.0.1", features = ["macros", "rt-threaded", "time"] }
zipf = "7.0.0"
async-stream = "0.3.0"
async-trait = "0.1"
backtrace = "0.3"
batch-system = { path = "components/batch-system", default-features = false }
bitflags = "1.0.1"
byteorder = "1.2"
cache-size = "0.5"
chrono = "0.4"
codec = { path = "components/codec" }
interlocking_directorate = { path = "components/interlocking_directorate" }
configuration = { path = "components/configuration" }
crc32fast = "1.2"
crc64fast = "1.0.0"
crossbeam = "0.8.0"
derive_more = "0.99.3"
encryption = { path = "components/encryption" }
engine_panic = { path = "components/engine_panic", optional = true }
engine_lmdb = { path = "components/engine_lmdb" }
edb = { path = "components/edb" }
error_code = { path = "components/error_code" }
fail = "0.4.0"
failure = "0.1"
fs2 = "0.4"
futures = { version = "0.3", features = ["thread-pool", "compat"] }
futures-executor = "0.3.1"
futures-util = { version = "0.3.1", default-features = false, features = ["io", "async-await"] }
grpcio = { version = "0.7.1", default-features = false, features = ["openssl-vlightlikeored"] }
hex = "0.4"
hyper-tls = "0.5.0"
itertools = "0.10.0"
openssl = "0.10"
hyper = "0.14.2"
hyper-openssl = "0.9.1"
http = "0"
into_other = { path = "components/into_other" }
tuplespaceInstanton = { path = "components/tuplespaceInstanton" }
ekvproto = { git = "https://github.com/whtcorpsinc/ekvproto.git", default-features = false }
lazy_static = "1.3"
libc = "0.2"
log = { version = "0.4", features = ["max_level_trace", "release_max_level_debug"] }
log_wrappers = { path = "components/log_wrappers" }
mime = "0.3.13"
more-asserts = "0.2.1"
murmur3 = "0.5.1"
nom = { version = "6.0.1", default-features = false, features = ["std"] }
num_cpus = "1"
fidel_client = { path = "components/fidel_client" }
pin-project = "1.0.3"
pnet_datalink = "0.27.2"
prost = "0.7.0"
pprof = { version = "0.4.0", features = ["flamegraph", "protobuf"] }
protobuf = "2.8"
quick-error = "2.0.0"
violetabftstore = { path = "components/violetabftstore" }
violetabft_log_engine = { path = "components/violetabft_log_engine" }
rand = "0.8.1"
regex = "1.3"
rev_lines = "0.2.1"
security = { path = "components/security" }
serde = { version = "1.0", features = ["derive"] }
serde_derive = "1.0"
serde_ignored = "0.1"
serde_json = "1.0"
slog = { version = "2.3", features = ["max_level_trace", "release_max_level_debug"] }
slog-global = { version = "0.1", git = "https://github.com/breeswish/slog-global.git", rev = "0e23a5baff302a9d7bccd85f8f31e43339c2f2c1" }
slog_derive = "0.2"
parking_lot = "0.11.1"
sst_importer = { path = "components/sst_importer" }
sysinfo = "0.16.4"
semver = "0.11.0"
tempfile = "3.0"
match_template = { path = "components/match_template" }
milevadb_query_datatype = { path = "components/milevadb_query_datatype" }
milevadb_query_common = { path = "components/milevadb_query_common" }
milevadb_query_shared_expr = { path = "components/milevadb_query_shared_expr" }
milevadb_query_normal_expr = { path = "components/milevadb_query_normal_expr" }
milevadb_query_normal_executors = { path = "components/milevadb_query_normal_executors" }
milevadb_query_vec_expr = { path = "components/milevadb_query_vec_expr" }
milevadb_query_vec_aggr = { path = "components/milevadb_query_vec_aggr" }
milevadb_query_vec_executors = { path = "components/milevadb_query_vec_executors" }
violetabftstore::interlock:: = { path = "components/violetabftstore::interlock::" }
time = "0.2.23"
fidel_timeshare = { git = "https://github.com/whtcorpsinc/fidel_timeshare.git", default-features = false }
tokio-threadpool = "0.1.13"
tokio-timer = "0.2"
tokio-openssl = "0.6.0"
toml = "0.5.8"
txn_types = { path = "components/txn_types" }
url = "2"
uuid = { version = "0.8.1", features = ["serde", "v4"] }
vlog = "0.1.4"
walkdir = "2"
minitrace = { git = "https://github.com/whtcorpsinc/minitrace-rust.git", branch = "master" }




